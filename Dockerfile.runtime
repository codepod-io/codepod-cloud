FROM ubuntu:23.10

RUN apt-get update -y

# Essential packages
RUN apt-get install -y build-essential git curl wget

# Step 1: Install python3
RUN apt-get install -y python3 python3-pip python3-venv

# Do this: set the venv path to PATH so that we don't need to source it.
# https://pythonspeed.com/articles/activate-virtualenv-dockerfile/
ENV VIRTUAL_ENV=/opt/venv
RUN python3 -m venv $VIRTUAL_ENV
ENV PATH="$VIRTUAL_ENV/bin:$PATH"

RUN pip install ipykernel


# Step 2: Install nodejs:20
RUN apt-get install -y ca-certificates curl gnupg && \
    mkdir -p /etc/apt/keyrings && \
    curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key | gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg


RUN NODE_MAJOR=20 && echo "deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_$NODE_MAJOR.x nodistro main" | tee /etc/apt/sources.list.d/nodesource.list

RUN apt-get update -y && apt-get install nodejs -y


# The app
WORKDIR /app
COPY pnpm-lock.yaml .
COPY pnpm-workspace.yaml .
COPY ui/package.json ./ui/package.json
COPY api/package.json ./api/package.json
COPY packages/yjs/package.json ./packages/yjs/package.json

RUN corepack enable
RUN pnpm i

COPY . .

# WORKDIR /app/ui
# RUN pnpm run build

# WORKDIR /app/api
# RUN pnpm dlx prisma generate && pnpm run build

WORKDIR /app/api
RUN pnpm dlx prisma generate

WORKDIR /app/

CMD ["tail", "-f", "/dev/null"]
