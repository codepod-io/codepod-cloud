apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: mysecret
stringData:
  GOOGLE_CLIENT_ID: "{{ .Values.googleClientId }}"
  JWT_SECRET: "{{ .Values.jwtSecret }}"
  AWS_ACCESS_KEY_ID: "{{ .Values.AWS_ACCESS_KEY_ID }}"
  AWS_SECRET_ACCESS_KEY: "{{ .Values.AWS_SECRET_ACCESS_KEY }}"
  AWS_REGION: "{{ .Values.AWS_REGION }}"
  S3_BUCKET: "{{ .Values.S3_BUCKET }}"
data:
  # Use automatically generated secret.
  # JWT_SECRET: "{{ randAlphaNum 16 | b64enc }}"
  EXAMPLE_GENERATED_SECRET: "{{ randAlphaNum 16 | b64enc }}"

# init container
# Manually run in this pod:
#     corepack enable && pnpm i
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zzz-codepod-init
  labels:
    app: codepod-init
spec:
  replicas: 1
  selector:
    matchLabels:
      app: codepod-init
  template:
    metadata:
      labels:
        app: codepod-init
    spec:
      containers:
        - name: codepod-init
          image: node:20
          workingDir: /app
          command: ["tail", "-f", "/dev/null"]
          volumeMounts:
            - mountPath: /app
              name: src
              readOnly: false
      volumes:
        - name: src
          hostPath:
            path: "{{ .Values.srcDir }}"

# UI
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aaa-codepod-ui
  labels:
    app: codepod-ui
spec:
  replicas: 1
  selector:
    matchLabels:
      app: codepod-ui
  template:
    metadata:
      labels:
        app: codepod-ui
    spec:
      containers:
        - name: aaa-codepod-ui
          image: node:20
          workingDir: /app/ui
          # command: ["tail", "-f", "/dev/null"]
          command: ["/bin/sh"]
          args:
            - -c
            - >-
              corepack enable &&
              pnpm run dev

          env:
            - name: VITE_APP_READ_ONLY
              value: "{{ .Values.READ_ONLY }}"
            - name: VITE_APP_BANNER
              value: "{{ .Values.BANNER }}"
            - name: VITE_APP_GOOGLE_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: mysecret
                  key: GOOGLE_CLIENT_ID
            - name: VITE_APP_APP_VERSION
              value: "{{ .Chart.AppVersion }}"
          ports:
            - containerPort: 3000
          volumeMounts:
            - mountPath: /app
              name: src
              readOnly: false
          resources:
            limits:
              memory: 10Gi
              cpu: "4"
            requests:
              memory: 4Gi
              cpu: "0.5"
      volumes:
        - name: src
          hostPath:
            path: "{{ .Values.srcDir }}"

---
apiVersion: v1
kind: Service
metadata:
  name: codepod-ui-service
spec:
  selector:
    app: codepod-ui
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3000

# API
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aaa-codepod-api
  labels:
    app: codepod-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: codepod-api
  template:
    metadata:
      labels:
        app: codepod-api
    spec:
      # serviceAccountName: api-account
      containers:
        - name: aaa-codepod-api
          image: node:20
          workingDir: /app/api
          # command: ["pnpm", "run", "dev:main"]
          # command: ["tail", "-f", "/dev/null"]
          command: ["/bin/sh"]
          args:
            - -c
            - >-
              corepack enable &&
              pnpm run dev:main
          ports:
            - containerPort: 4000
          volumeMounts:
            - mountPath: /app
              name: src
              readOnly: false
          env:
            - name: READ_ONLY
              value: "{{ .Values.READ_ONLY }}"
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: database-superuser
                  key: password
            - name: DATABASE_URL
              value: "postgresql://postgres:$(DB_PASSWORD)@database-rw:5432/app"
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: mysecret
                  key: JWT_SECRET
            - name: GOOGLE_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: mysecret
                  key: GOOGLE_CLIENT_ID
            # S3 configuration
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: mysecret
                  key: AWS_ACCESS_KEY_ID
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: mysecret
                  key: AWS_SECRET_ACCESS_KEY
            - name: AWS_REGION
              valueFrom:
                secretKeyRef:
                  name: mysecret
                  key: AWS_REGION
            - name: S3_BUCKET
              valueFrom:
                secretKeyRef:
                  name: mysecret
                  key: S3_BUCKET

          resources:
            limits:
              memory: 6Gi
              cpu: "4"
            requests:
              memory: 1Gi
              cpu: "0.5"
      volumes:
        - name: src
          hostPath:
            path: "{{ .Values.srcDir }}"
---
apiVersion: v1
kind: Service
metadata:
  name: codepod-api-service
spec:
  selector:
    app: codepod-api
  ports:
    - protocol: TCP
      port: 4000
      targetPort: 4000

# prisma
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prisma-studio
  labels:
    app: prisma-studio
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prisma-studio
  template:
    metadata:
      labels:
        app: prisma-studio
    spec:
      volumes:
        - name: src
          hostPath:
            path: "{{ .Values.srcDir }}"
      containers:
        - name: psql
          image: postgres:10.1
          env:
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: database-superuser
                  key: password
            - name: DATABASE_URL
              value: "postgresql://postgres:$(DB_PASSWORD)@database-rw:5432/app"
        - name: prisma
          image: node:20
          workingDir: /app/api
          # command: ["tail", "-f", "/dev/null"]
          command: ["/bin/sh"]
          args:
            - -c
            - >-
              corepack enable &&
              pnpm dlx prisma studio
          ports:
            - containerPort: 5555
          volumeMounts:
            - mountPath: /app
              name: src
              readOnly: false
          env:
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: database-superuser
                  key: password
            - name: DATABASE_URL
              value: "postgresql://postgres:$(DB_PASSWORD)@database-rw:5432/app"
          resources:
            limits:
              memory: 2048Mi
              cpu: "1"
            requests:
              memory: 1024Mi
              cpu: "0.2"

---
apiVersion: v1
kind: Service
metadata:
  name: prisma-studio-service
spec:
  selector:
    app: prisma-studio
  ports:
    - protocol: TCP
      port: 80
      targetPort: 5555

# Yjs server
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aaa-codepod-yjs
  labels:
    app: codepod-yjs
spec:
  replicas: 1
  selector:
    matchLabels:
      app: codepod-yjs
  template:
    metadata:
      labels:
        app: codepod-yjs
    spec:
      containers:
        - name: aaa-codepod-yjs
          image: node:20
          workingDir: /app/api
          # command: ["pnpm", "run", "dev:yjs"]
          # command: ["tail", "-f", "/dev/null"]
          command: ["/bin/sh"]
          args:
            - -c
            - >-
              corepack enable &&
              pnpm run dev:yjs
          ports:
            - containerPort: 4233
          volumeMounts:
            - mountPath: /app
              name: src
              readOnly: false
          env:
            - name: READ_ONLY
              value: "{{ .Values.READ_ONLY }}"
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: database-superuser
                  key: password
            - name: DATABASE_URL
              value: "postgresql://postgres:$(DB_PASSWORD)@database-rw:5432/app"
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: mysecret
                  key: JWT_SECRET
          resources:
            limits:
              memory: 6Gi
              cpu: "4"
            requests:
              memory: 1Gi
              cpu: "0.5"
      volumes:
        - name: src
          hostPath:
            path: "{{ .Values.srcDir }}"

---
apiVersion: v1
kind: Service
metadata:
  name: codepod-yjs-service
spec:
  selector:
    app: codepod-yjs
  ports:
    - protocol: TCP
      port: 4233
      targetPort: 4233

---
# runtime server
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aaa-codepod-runtime
  labels:
    app: codepod-runtime
spec:
  replicas: 1
  selector:
    matchLabels:
      app: codepod-runtime
  template:
    metadata:
      labels:
        app: codepod-runtime
    spec:
      serviceAccountName: api-account
      containers:
        - name: aaa-codepod-runtime
          image: node:20
          workingDir: /app/api
          # command: ["pnpm", "run", "dev:runtime"]
          # command: ["tail", "-f", "/dev/null"]
          command: ["/bin/sh"]
          args:
            - -c
            - >-
              corepack enable &&
              pnpm run dev:runtime
          ports:
            - containerPort: 4001
          volumeMounts:
            - mountPath: /app
              name: src
              readOnly: false
          env:
            - name: READ_ONLY
              value: "{{ .Values.READ_ONLY }}"
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: mysecret
                  key: JWT_SECRET
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: database-superuser
                  key: password
            - name: DATABASE_URL
              value: "postgresql://postgres:$(DB_PASSWORD)@database-rw:5432/app"
            - name: YJS_WS_URL
              value: "ws://codepod-yjs-service:4233/yjs"
            - name: RUNTIME_NS
              value: "{{ .Release.Namespace }}-runtime"
            - name: KERNEL_IMAGE_PYTHON
              value: "{{ .Values.kernelImages.python }}"
            - name: KERNEL_IMAGE_JULIA
              value: "{{ .Values.kernelImages.julia }}"
            - name: KERNEL_IMAGE_JAVASCRIPT
              value: "{{ .Values.kernelImages.javascript }}"
            - name: KERNEL_IMAGE_RACKET
              value: "{{ .Values.kernelImages.racket }}"
            - name: KERNEL_MAX_LIFETIME
              # 60 * 60 * 1000; // 1 hr
              # 60 * 60 * 24 * 1000 = 86400000; // 1 day
              value: "86400000"
            - name: KERNEL_ULIMIT_MEMORY
              value: "16Gi"
          resources:
            limits:
              memory: 6Gi
              cpu: "4"
            requests:
              memory: 1Gi
              cpu: "0.5"
      volumes:
        - name: src
          hostPath:
            path: "{{ .Values.srcDir }}"

---
apiVersion: v1
kind: Service
metadata:
  name: codepod-runtime-service
spec:
  selector:
    app: codepod-runtime
  ports:
    - protocol: TCP
      port: 4001
      targetPort: 4001
