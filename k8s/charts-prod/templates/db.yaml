---
apiVersion: v1
kind: Secret
metadata:
  name: aws-creds
stringData:
  ACCESS_KEY_ID: "{{ .Values.awsAccessKeyId }}"
  ACCESS_SECRET_KEY: "{{ .Values.awsSecretAccessKey }}"

---
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: database
spec:
  instances: 1

  enableSuperuserAccess: true

  storage:
    size: 1Gi

  resources:
    requests:
      memory: "512Mi"
      cpu: "1"
    limits:
      memory: "1Gi"
      cpu: "2"

  # -------------------------
  # Optional: Recover from a backup. Remove this to bootstrap an empty cluster.
  bootstrap:
    recovery:
      source: backup-cluster
      # Optional recovery target timestamp. If not specified, use the latest WAL.
      # recoveryTarget:
      #   # The timestamp expressed in RFC 3339 format.
      #   #
      #   # e.g., "2024-06-27T19:13:00-07:00" for 2024-06-27 19:13:00 in Pacific
      #   # Time (UTC-7)
      #   targetTime: "2024-06-27T19:13:00-07:00"
  externalClusters:
  - name: backup-cluster
    barmanObjectStore:
      destinationPath: s3://codepod-dev/staging-backups/
      # specify the folder name
      serverName: "backup-0627-1906"
      s3Credentials:
        accessKeyId:
          name: aws-creds
          key: ACCESS_KEY_ID
        secretAccessKey:
          name: aws-creds
          key: ACCESS_SECRET_KEY

  backup:
    # It looks like the WAL backups are taken no matter whether the base backup
    # is scheduled or not.
    barmanObjectStore:
      destinationPath: s3://codepod-dev/staging-backups/
      # NOTE: this should be a different folder than the recovery cluster.
      serverName: "backup-0627-1938"
      s3Credentials:
        accessKeyId:
          name: aws-creds
          key: ACCESS_KEY_ID
        secretAccessKey:
          name: aws-creds
          key: ACCESS_SECRET_KEY
      wal:
        compression: gzip
    retentionPolicy: "7d"


# On-demand backup
# ---
# apiVersion: postgresql.cnpg.io/v1
# kind: Backup
# metadata:
#   name: manual-pg-backup
# spec:
#   cluster:
#     name: database


---
apiVersion: postgresql.cnpg.io/v1
kind: ScheduledBackup
metadata:
  name: scheduled-backup-example
spec:
  # Every day at midnight. This is the base backup. WAL will be taken every 5
  # minutes. This base backup set for every 5 day is more than enough.
  schedule: "0 0 0 * * *"
  backupOwnerReference: self
  cluster:
    name: database
  immediate: true